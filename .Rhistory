main = "Exponential Distribution", col = "orange")
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(rexp(n,lamda)))
hist(mns,xlab = "Mean of exponential data", ylab = "Frequency",
main = "Distribution of exponential mean", col = "orange")
data()
time=Sys.Date()
time
set.seed(15)
lamda=0.2
n_simulations=40
hist(rexp(n_simulations,lamda), xlab = "Exponential data", ylab = "Frequency", freq = TRUE,
main = "Exponential Distribution", col = "orange")
mean_sample = NULL
for (i in 1 : 1000) mns = c(mean_sample, var(rexp(n_simulations,lamda)))
mean(mean_sample)
hist(mns,xlab = "Mean of exponential data", ylab = "Frequency", freq = TRUE,
main = "Distribution of exponential mean", col = "orange")
mean_sample
set.seed(15)
lamda=0.2
n_simulations=40
# hist(rexp(n_simulations,lamda), xlab = "Exponential data", ylab = "Frequency", freq = TRUE,
#      main = "Exponential Distribution", col = "orange")
mean_sample = NULL
for (i in 1 : 1000) mean_sample = c(mean_sample, var(rexp(n_simulations,lamda)))
mean(mean_sample)
# hist(mns,xlab = "Mean of exponential data", ylab = "Frequency", freq = TRUE,
#      main = "Distribution of exponential mean", col = "orange")
mean_sample
set.seed(15)
lamda=0.2
n_simulations=40
# hist(rexp(n_simulations,lamda), xlab = "Exponential data", ylab = "Frequency", freq = TRUE,
#      main = "Exponential Distribution", col = "orange")
mean_sample = NULL
for (i in 1 : 1000) mean_sample = c(mean_sample, var(rexp(n_simulations,lamda)))
mean(mean_sample)
# hist(mns,xlab = "Mean of exponential data", ylab = "Frequency", freq = TRUE,
#      main = "Distribution of exponential mean", col = "orange")
set.seed(15)
lamda=0.2
n_simulations=40
# hist(rexp(n_simulations,lamda), xlab = "Exponential data", ylab = "Frequency", freq = TRUE,
#      main = "Exponential Distribution", col = "orange")
mean_sample = NULL
for (i in 1 : 1000) mean_sample = c(mean_sample,rexp(n_simulations,lamda))
var(mean_sample)
# hist(mns,xlab = "Mean of exponential data", ylab = "Frequency", freq = TRUE,
#      main = "Distribution of exponential mean", col = "orange")
set.seed(15)
lamda=0.2
n_simulations=40
# hist(rexp(n_simulations,lamda), xlab = "Exponential data", ylab = "Frequency", freq = TRUE,
#      main = "Exponential Distribution", col = "orange")
mean_sample = NULL
for (i in 1 : 1000) mean_sample = c(mean_sample,rexp(n_simulations,lamda))
var(mean_sample)
hist(mns,xlab = "Mean of exponential data", ylab = "Frequency", freq = TRUE,
main = "Distribution of exponential mean", col = "orange", breaks = 40)
set.seed(15)
lamda=0.2
n_simulations=40
hist(rexp(n_simulations,lamda), xlab = "Exponential data", ylab = "Frequency", freq = TRUE,
main = "Exponential Distribution", col = "orange")
mean_sample = NULL
for (i in 1 : 1000) mns = c(mean_sample, mean(rexp(n_simulations,lamda)))
hist(mns,xlab = "Mean of exponential data", ylab = "Frequency", freq = TRUE,
main = "Distribution of exponential mean", col = "orange")
set.seed(15)
lamda=0.2
n_simulations=40
hist(rexp(n_simulations,lamda), xlab = "Exponential data", ylab = "Frequency", freq = TRUE,
main = "Exponential Distribution", col = "orange")
mean_sample = NULL
for (i in 1 : 1000) mean_sample = c(mean_sample, mean(rexp(n_simulations,lamda)))
hist(mean_sample,xlab = "Mean of exponential data", ylab = "Frequency", freq = TRUE,
main = "Distribution of exponential mean", col = "orange")
set.seed(15)
lamda=0.2
n_simulations=40
hist(rexp(n_simulations,lamda), xlab = "Exponential data", ylab = "Frequency", freq = TRUE,
main = "Exponential Distribution", col = "orange")
mean_sample = NULL
for (i in 1 : 1000) mean_sample = c(mean_sample, mean(rexp(n_simulations,lamda)))
hist(mean_sample,xlab = "Mean of exponential data", ylab = "Frequency", freq = TRUE,
main = "Distribution of exponential mean", col = "orange", breaks = 40)
x = seq(min(SampleMean), max(SampleMean), length = 100)
lines(x, dnorm(x, mean = 1/lamda, sd = (1/lamda/sqrt(n_simulations))), pch = 25, col = "green")
x = seq(min(mean_sample), max(mean_sample), length = 100)
lines(x, dnorm(x, mean = 1/lamda, sd = (1/lamda/sqrt(n_simulations))), pch = 25, col = "green")
set.seed(15)
lamda=0.2
n_simulations=40
hist(rexp(n_simulations,lamda), xlab = "Exponential data", ylab = "Frequency", freq = TRUE,
main = "Exponential Distribution", col = "orange")
mean_sample = NULL
for (i in 1 : 1000) mean_sample = c(mean_sample, mean(rexp(n_simulations,lamda)))
hist(mean_sample,xlab = "Mean of exponential data", ylab = "Frequency", freq = FALSE,
main = "Distribution of exponential mean", col = "orange", breaks = 40)
x = seq(min(mean_sample), max(mean_sample), length = 100)
lines(x, dnorm(x, mean = 1/lamda, sd = (1/lamda/sqrt(n_simulations))), pch = 25, col = "green")
set.seed(15)
lamda=0.2
n_simulations=40
hist(rexp(n_simulations,lamda), xlab = "Exponential data", ylab = "Frequency", freq = TRUE,
main = "Exponential Distribution", col = "orange")
mean_sample = NULL
for (i in 1 : 1000) mean_sample = c(mean_sample, mean(rexp(n_simulations,lamda)))
hist(mean_sample,xlab = "Mean of exponential data", ylab = "Frequency",
main = "Distribution of exponential mean", col = "orange", breaks = 40)
library(datasets)
data(ToothGrowth)
library(ggplot2)
str(ToothGrowth)
head(ToothGrowth)
summary(ToothGrowth)
library(xtable)
install.packages("xtable")
library(xtable)
?t.test
getwd()
setwd("~/RepData_PeerAssessment1")
?n_distinct
??n_distinct
activity
library(ggplot2)
library(xtable)
filename <- "activity.zip"
# Checking whether the unziped files exist
if (!file.exists(filename)) {
unzip(filename)
}
activity=read.csv("activity.csv")
steps_day <- tapply(activity$steps, activity$date, sum, na.rm=TRUE)
library(ddplyr)
library(dplyr)
head(activity)
activity %>% group_by(interval) %>% summerise(interval,timeseries=sum(steps))
activity %>% group_by(interval) %>% summarise(interval,timeseries=sum(steps))
?summarise
activity %>% group_by(interval) %>% summarise(,timeseries=sum(steps))
activity %>% group_by(interval) %>% summarise(timeseries=sum(steps))
timeseries=activity %>% group_by(interval) %>% summarise(timeseries=sum(steps))
str(timeseries)
sum(timeseries$timeseries)
?group_by
?summarise
timeseries=activity %>% group_by(interval)
head(timeseries)
str(activity)
timeseries=activity %>% group_by(interval) %>% summarise(timeseries=sum(steps, rm.na=TRUE))
timeseries
str(activity)
sum(activity$steps)
getwd()
activity=read.csv("activity.csv")
sum(activity$steps)
sum(activity$steps, rm.na=TRUE)
summary(activity)
?summ
?sum
sum(activity$steps, na.rm = =TRUE)
sum(activity$steps, na.rm = TRUE)
timeseries=activity %>% group_by(interval) %>% summarise(timeseries=sum(steps, na.rm = TRUE))
timeseries
plot(y=timeseries$timeseries,x=timeseries$interval)
plot(y=timeseries$timeseries,x=timeseries$interval, type = "l")
plot(dat=timeseries,x=interval,y=timeseries)
plot(timeseries$timeseries, timeseries$interval, type = "l",
main= "Time series of steps",
xlab = "Interval",
ylab = "Steps")
plot(timeseries$timeseries, timeseries$interval, type = "l",
main= "Time series of steps",
xlab = "Interval",
ylab = "Steps")
time_series=activity %>% group_by(interval) %>% summarise(cum_steps=sum(steps, na.rm = TRUE))
plot(x=time_series[1], y=time_series[2], type = "l",
main= "Time series of steps",
xlab = "Interval",
ylab = "Steps")
time_series
time_series=activity %>% group_by(interval) %>% summarise(cum_steps=sum(steps, na.rm = TRUE))
plot(x=time_series$interval, y=time_series$cum_steps, type = "l",
main= "Time series of steps",
xlab = "Interval",
ylab = "Steps")
colSums(is.na(activity))
activity_imputed <- actvity[impute(activity$steps, fun=mean),]
activity_imputed <- activity[impute(activity$steps, fun=mean),]
??impute
?impute
??impute
activity[is.na(activity$steps)]=5
activity[is.na(activity$steps),]
activity[is.na(activity$steps),]=5
summary(activity)
head(activity)
activity=read.csv("activity.csv")
mutate_if()
?mutate_if
head(iris)
iris %>% mutate_if(is.numeric, list(scale2))
?mutate_if
scale2 <- function(x, na.rm = FALSE) (x - mean(x, na.rm = na.rm)) / sd(x, na.rm)
iris %>% mutate_if(is.numeric, list(scale2))
actvitiy %>% mutate_if(is.na,mean(activity$steps, na.rm = TRUE))
activitiy %>% mutate_if(is.na,mean(activity$steps, na.rm = TRUE))
activity %>% mutate_if(is.na,mean(activity$steps, na.rm = TRUE))
activity %>% mutate_if(is.na,list(mean(activity$steps, na.rm = TRUE)))
activity$steps %>% mutate_if(is.na,mean(activity$steps, na.rm = TRUE))
activity$steps[is.na(activity$steps)==TRUE]=mean(activity$steps,na.rm = TRUE)
head(activity)
activity=read.csv("activity.csv")
activity$steps[is.na(activity$steps)==TRUE]=mean(activity$steps,na.rm = TRUE)
head(activity)
activity=read.csv("activity.csv")
activity=activity[activity$steps[is.na(activity$steps)==TRUE]=mean(activity$steps,na.rm = TRUE),]
activity %>% group_by(interval) %>% summarise(steps=sum(steps))
activity %>% group_by(interval) %>% summarise(steps=sum(steps, na.rm = TRUE))
activity %>% group_by(interval) %>% summarise(steps=sum(steps, na.rm = TRUE)) %>% hist( xlab = "Steps per day", ylab = "Frequency",main = "Total steps per day",col = "grey")
activity_imputed <- activity
activity_imputed$steps[is.na(activity_imputed$steps)==TRUE]=mean(activity$steps,na.rm = TRUE)
head(activity_imputed)
mean_steps_2 =activity_imputed %>% group_by(interval) %>% summarise(steps=sum(steps))
mean_steps_2 =activity_imputed %>% group_by(interval) %>% summarise(steps=sum(steps))
hist(mean_steps_2, xlab = "Steps per day", ylab = "Frequency",
main = "Total steps per day",col = "grey")
mean_steps_2 =activity_imputed %>% group_by(date)
hist(mean_steps_2$interval, xlab = "Steps per day", ylab = "Frequency",
main = "Total steps per day",col = "grey")
activity=read.csv("activity.csv")
act =activity %>% group_by(interval) %>% summarise(steps=sum(steps, na.rm = TRUE))
activity$steps[is.na(activity$steps)==TRUE]=mean(activity$steps,na.rm = TRUE)
hist(group_by(activity, steps))
hist((group_by(activity, steps))$steps)
head(activity)
hist((group_by(activity, steps))$interval)
hist((group_by(activity, interval))$interval)
hist(activity$interval)
summary(activity)
tapply(activity$interval, activity$date, sum)
hist(tapply(activity$interval, activity$date, sum))
act=tapply(activity$interval, activity$date, sum)
hist(act$interval)
hist(tapply(activity$steps, activity$date, sum))
mean_steps_2 =activity_imputed %>% group_by(date)
hist(mean_steps_2$steps, xlab = "Steps per day", ylab = "Frequency",
main = "Total steps per day",col = "grey")
mean_steps_2 =activity_imputed %>% group_by(date)
hist(mean_steps_2$steps, xlab = "Steps per day", ylab = "Frequency",
main = "Total steps per day",col = "grey")
mean_steps_2 =activity_imputed %>% group_by(steps)
hist(mean_steps_2$steps, xlab = "Steps per day", ylab = "Frequency",
main = "Total steps per day",col = "grey")
mean_steps_2 =tapply(activity_imputed$steps, activity_imputed$date, sum)
hist(mean_steps_2$steps, xlab = "Steps per day", ylab = "Frequency",
main = "Total steps per day",col = "grey")
mean_steps_2 =tapply(activity_imputed$steps, activity_imputed$date, sum)
hist(mean_steps_2, xlab = "Steps per day", ylab = "Frequency",
main = "Total steps per day",col = "grey")
mean_steps_2 =tapply(activity_imputed$steps, activity_imputed$date, sum)
hist(mean_steps_2, xlab = "Steps per day", ylab = "Frequency",
breaks = 10 main = "Total steps per day",col = "grey")
mean_steps_2 =tapply(activity_imputed$steps, activity_imputed$date, sum)
hist(mean_steps_2, xlab = "Steps per day", ylab = "Frequency",
breaks = 10 main = "Total steps per day",col = "grey")
mean_steps_2 =tapply(activity_imputed$steps, activity_imputed$date, sum)
hist(mean_steps_2, xlab = "Steps per day", ylab = "Frequency",
breaks = 10, main = "Total steps per day",col = "grey")
steps_day <- tapply(activity$steps, activity$date, sum, na.rm=TRUE)
hist(steps_day, xlab = "Steps per day", ylab = "Frequency",
breaks = 10 main = "Total steps per day",col = "grey")
steps_day <- tapply(activity$steps, activity$date, sum, na.rm=TRUE)
hist(steps_day, xlab = "Steps per day", ylab = "Frequency",
breaks = 10, main = "Total steps per day",col = "grey")
mean_steps <- mean(steps_day_2)
mean_steps <- mean(steps_day_2)
steps_day_2 =tapply(activity_imputed$steps, activity_imputed$date, sum)
hist(steps_day_2, xlab = "Steps per day", ylab = "Frequency",
breaks = 10, main = "Total steps per day",col = "grey")
mean_steps <- mean(steps_day_2)
median_steps <- median(steps_day_2)
mean_steps_2 <- mean(steps_day_2)
median_steps_2 <- median(steps_day_2)
delta_mean  <- (mean_steps_2-mean_steps)*100/mean_steps
delta_median <- (median_steps_2-median_steps)*100/median_steps
mean_steps_2 <- round(mean(steps_day_2),3)
median_steps_2 <- round(median(steps_day_2),3)
delta_mean  <- (mean_steps_2-mean_steps)*100/mean_steps %>% round(3)
delta_median <- (median_steps_2-median_steps)*100/median_steps
mean_steps_2 <- round(mean(steps_day_2),3)
median_steps_2 <- round(median(steps_day_2),3)
delta_mean  <- (mean_steps_2-mean_steps)*100/mean_steps %>% round(3)
delta_median <- (median_steps_2-median_steps)*100/median_steps %>%  round(3)
mean_steps_2 <- round(mean(steps_day_2),3)
median_steps_2 <- round(median(steps_day_2),3)
delta_mean  <- (mean_steps_2-mean_steps)*100/mean_steps %>% round(3)
delta_median <- (median_steps_2-median_steps)*100/median_steps %>%  round(3)
mean_steps_2
mean_steps_2 <- round(mean(steps_day_2),3)
median_steps_2 <- round(median(steps_day_2),3)
delta_mean  <- (mean_steps_2-mean_steps)*100/mean_steps %>% round(3)
delta_median <- (median_steps_2-median_steps)*100/median_steps %>%  round(3)
mean_steps_2
delta_mean
mean_steps_2 <- round(mean(steps_day_2),3)
median_steps_2 <- round(median(steps_day_2),3)
delta_mean  <- round((mean_steps_2-mean_steps)*100/mean_steps,3)
delta_median <- round((median_steps_2-median_steps)*100/median_steps,3)
mean_steps_2
delta_mean
?round
mean_steps_2 <- round(mean(steps_day_2),3)
median_steps_2 <- round(median(steps_day_2),3)
delta_mean  <- round((mean_steps_2-mean_steps)*100/mean_steps,3)
delta_median <- round((median_steps_2-median_steps)*100/median_steps,5)
mean_steps_2
delta_mean
mean_steps_2 <- round(mean(steps_day_2),3)
median_steps_2 <- round(median(steps_day_2),3)
delta_mean  <- round((mean_steps_2-mean_steps)*100/mean_steps,3)
delta_median <- round((median_steps_2-median_steps)*100/median_steps,10)
mean_steps_2
delta_mean
mean_steps_2 <- round(mean(steps_day_2),3)
median_steps_2 <- round(median(steps_day_2),3)
delta_mean  <- round((mean_steps_2-mean_steps)*100/mean_steps,5)
delta_median <- round((median_steps_2-median_steps)*100/median_steps,3)
mean_steps_2
delta_mean
mean_steps_2 <- round(mean(steps_day_2),3)
median_steps_2 <- round(median(steps_day_2),3)
delta_mean  <- round((mean_steps_2-mean_steps)*100/mean_steps,10)
delta_median <- round((median_steps_2-median_steps)*100/median_steps,3)
mean_steps_2
delta_mean
mean_steps_2 <- round(mean(steps_day_2),3)
median_steps_2 <- round(median(steps_day_2),3)
delta_mean  <- round((mean_steps_2-mean_steps)*100/mean_steps,10)
delta_median <- round((median_steps_2-median_steps)*100/median_steps,3)
str(activity)
as.Date(activ[2,2])
as.Date(activity[2,2])
weekdays(as.Date(activity[2,2]))
as.integer(weekdays(as.Date(activity[2,2])))
?weekdays
activity=read.csv("activity.csv")
as.POSIXct(activity[2,2])$wday
(as.POSIXct(activity[2,2]))$wday
(as.POSIXct(activity[2,2]))
as.POSIXct(activity[2,2])$month
as.POSIXct(activity[2,2])$mon
as.POSIXct(activity[2])$mon
as.POSIXct(activity[,2])$mon
year = as.POSIXlt(activity$date)$year
year
fsdfd=as.POSIXct(activity[,2])$mon
fsdfd=as.POSIXct(activity$date)$mon
fsdfd=as.POSIXlt(activity$date)$mon
fsdfd=as.POSIXlt(activity$date)$wday
fadfd
fsdfd
activity_week <- activity
%>% mutate(weekday=as.POSIXlt(activity$date)$wday)
str(fsdfd)
tail(fsdfd)
fsdfd=factor(fsdfd)
levels(fsdfd)
activity_week <- activity %>% mutate(weekday=factor(as.POSIXlt(activity$date)$wday %in% c(0:5),labels = c("weekdays","weekend")))
str(activity_week)
activity_imputed <- activity_imputed %>% mutate(factor(weekday=factor(as.POSIXlt(activity$date)$wday %in% c(0:5),labels = c("weekdays","weekend")))
activity_imputed <- activity_imputed %>% mutate(weekday=factor(as.POSIXlt(activity$date)$wday %in% c(0:5),labels = c("weekdays","weekend")))
activity <- read.csv("activity.csv")
activity_week %>% group_by(interval,weekday) %>% summarise(steps=mean(steps, na.rm = TRUE))
?facet_grid
time_series_2 <- activity_imputed %>% mutate(weekday=factor(as.POSIXlt(activity$date)$wday %in% c(0:5),labels = c("weekdays","weekend"))) %>% group_by(interval,weekday) %>% summarise(steps=mean(steps))
ggplot(data=time_series_2, ase(x=interval, y=steps))+
geom_abline()+
facet_grid(.~weekday)
library(ggplot2)
library(dplyr)
time_series_2 <- activity_imputed %>% mutate(weekday=factor(as.POSIXlt(activity$date)$wday %in% c(0:5),labels = c("weekdays","weekend"))) %>% group_by(interval,weekday) %>% summarise(steps=mean(steps))
ggplot(data=time_series_2, ase(x=interval, y=steps))+
geom_abline()+
facet_grid(.~weekday)
time_series_2 <- activity_imputed %>% mutate(weekday=factor(as.POSIXlt(activity$date)$wday %in% c(0:5),labels = c("weekdays","weekend"))) %>% group_by(interval,weekday) %>% summarise(steps=mean(steps))
ggplot(data=time_series_2, aes(x=interval, y=steps))+
geom_abline()+
facet_grid(.~weekday)
time_series_2 <- activity_imputed %>% mutate(weekday=factor(as.POSIXlt(activity$date)$wday %in% c(0:5),labels = c("weekdays","weekend"))) %>% group_by(interval,weekday) %>% summarise(steps=mean(steps))
ggplot(data=time_series_2, aes(x=interval, y=steps))+
geom_line()+
facet_grid(.~weekday)
time_series_2 <- activity_imputed %>% mutate(weekday=factor(as.POSIXlt(activity$date)$wday %in% c(0:5),labels = c("weekdays","weekend"))) %>% group_by(interval,weekday) %>% summarise(steps=mean(steps))
ggplot(data=time_series_2, aes(x=interval, y=steps))+
geom_line()+
geom_line(method="lm")
facet_grid(.~weekday)
time_series_2 <- activity_imputed %>% mutate(weekday=factor(as.POSIXlt(activity$date)$wday %in% c(0:5),labels = c("weekdays","weekend"))) %>% group_by(interval,weekday) %>% summarise(steps=mean(steps))
ggplot(data=time_series_2, aes(x=interval, y=steps))+
geom_line()+
geom_smooth(method="lm")
facet_grid(.~weekday)
time_series_2 <- activity_imputed %>% mutate(weekday=factor(as.POSIXlt(activity$date)$wday %in% c(0:5),labels = c("weekdays","weekend"))) %>% group_by(interval,weekday) %>% summarise(steps=mean(steps))
ggplot(data=time_series_2, aes(x=interval, y=steps))+
geom_line()+
facet_grid(.~weekday)+
geom_smooth(method="lm")
time_series_2 <- activity_imputed %>% mutate(weekday=factor(as.POSIXlt(activity$date)$wday %in% c(0:5),labels = c("weekdays","weekend"))) %>% group_by(interval,weekday) %>% summarise(steps=mean(steps))
ggplot(data=time_series_2, aes(x=interval, y=steps))+
geom_line()+
facet_grid(.~weekday)+
geom_hline(yintercept = mean(steps))
time_series_2 <- activity_imputed %>% mutate(weekday=factor(as.POSIXlt(activity$date)$wday %in% c(0:5),labels = c("weekdays","weekend"))) %>% group_by(interval,weekday) %>% summarise(steps=mean(steps))
ggplot(data=time_series_2, aes(x=interval, y=steps))+
geom_line()+
facet_grid(.~weekday)+
geom_hline(yintercept = mean(timeseries$steps))
time_series_2 <- activity_imputed %>% mutate(weekday=factor(as.POSIXlt(activity$date)$wday %in% c(0:5),labels = c("weekdays","weekend"))) %>% group_by(interval,weekday) %>% summarise(steps=mean(steps))
ggplot(data=time_series_2, aes(x=interval, y=steps))+
geom_line()+
facet_grid(.~weekday)+
geom_hline(yintercept = mean(steps))
time_series_2 <- activity_imputed %>% mutate(weekday=factor(as.POSIXlt(activity$date)$wday %in% c(0:5),labels = c("weekdays","weekend"))) %>% group_by(interval,weekday) %>% summarise(steps=mean(steps))
ggplot(data=time_series_2, aes(x=interval, y=steps))+
geom_line()+
facet_grid(.~weekday)+
geom_hline(yintercept = mean(.~steps))
time_series_2 <- activity_imputed %>% mutate(weekday=factor(as.POSIXlt(activity$date)$wday %in% c(0:5),labels = c("weekdays","weekend"))) %>% group_by(interval,weekday) %>% summarise(steps=mean(steps))
ggplot(data=time_series_2, aes(x=interval, y=steps))+
geom_line()+
facet_grid(.~weekday)+
geom_hline(yintercept = mean(.steps))
time_series_2 <- activity_imputed %>% mutate(weekday=factor(as.POSIXlt(activity$date)$wday %in% c(0:5),labels = c("weekdays","weekend"))) %>% group_by(interval,weekday) %>% summarise(steps=mean(steps))
ggplot(data=time_series_2, aes(x=interval, y=steps))+
geom_line()+
facet_grid(.~weekday)+
geom_hline(yintercept = mean(~steps))
time_series_2 <- activity_imputed %>% mutate(weekday=factor(as.POSIXlt(activity$date)$wday %in% c(0:5),labels = c("weekdays","weekend"))) %>% group_by(interval,weekday) %>% summarise(steps=mean(steps))
ggplot(data=time_series_2, aes(x=interval, y=steps))+
geom_line()+
facet_grid(.~weekday)+
geom_smooth(method="lm")
time_series_2 <- activity_imputed %>% mutate(weekday=factor(as.POSIXlt(activity$date)$wday %in% c(0:5),labels = c("weekdays","weekend"))) %>% group_by(interval,weekday) %>% summarise(steps=mean(steps))
ggplot(data=time_series_2, aes(x=interval, y=steps))+
geom_line()+
facet_grid(.~weekday)+
geom_hline(data = time_series_2, yintercept = mean(steps))
time_series_2 <- activity_imputed %>% mutate(weekday=factor(as.POSIXlt(activity$date)$wday %in% c(0:5),labels = c("weekdays","weekend"))) %>% group_by(interval,weekday) %>% summarise(steps=mean(steps))
ggplot(data=time_series_2, aes(x=interval, y=steps))+
geom_line()+
facet_grid(.~weekday)+
geom_hline(ase(yintercept = mean(steps))
time_series_2 <- activity_imputed %>% mutate(weekday=factor(as.POSIXlt(activity$date)$wday %in% c(0:5),labels = c("weekdays","weekend"))) %>% group_by(interval,weekday) %>% summarise(steps=mean(steps))
ggplot(data=time_series_2, aes(x=interval, y=steps))+
geom_hline(yintercept = mean(steps))+
geom_line()+
facet_grid(.~weekday)+
time_series_2 <- activity_imputed %>% mutate(weekday=factor(as.POSIXlt(activity$date)$wday %in% c(0:5),labels = c("weekdays","weekend"))) %>% group_by(interval,weekday) %>% summarise(steps=mean(steps))
ggplot(data=time_series_2, aes(x=interval, y=steps))+
geom_hline(yintercept = mean(steps))+
geom_line()+
facet_grid(.~weekday)
time_series_2 <- activity_imputed %>% mutate(weekday=factor(as.POSIXlt(activity$date)$wday %in% c(0:5),labels = c("weekdays","weekend"))) %>% group_by(interval,weekday) %>% summarise(steps=mean(steps))
ggplot(data=time_series_2, aes(x=interval, y=steps))+
geom_hline(yintercept = 3)+
geom_line()+
facet_grid(.~weekday)
time_series_2 <- activity_imputed %>% mutate(weekday=factor(as.POSIXlt(activity$date)$wday %in% c(0:5),labels = c("weekdays","weekend"))) %>% group_by(interval,weekday) %>% summarise(steps=mean(steps))
ggplot(data=time_series_2, aes(x=interval, y=steps, group=weekday))+
geom_hline(yintercept = mean(steps))+
geom_line()+
facet_grid(.~weekday)
?geom_smooth
time_series_2 <- activity_imputed %>% mutate(weekday=factor(as.POSIXlt(activity$date)$wday %in% c(0:5),labels = c("weekdays","weekend"))) %>% group_by(interval,weekday) %>% summarise(steps=mean(steps))
ggplot(data=time_series_2, aes(x=interval, y=steps))+
geom_line()+
geom_smooth(method = "lm")
facet_grid(.~weekday)
time_series_2 <- activity_imputed %>% mutate(weekday=factor(as.POSIXlt(activity$date)$wday %in% c(0:5),labels = c("weekdays","weekend"))) %>% group_by(interval,weekday) %>% summarise(steps=mean(steps))
ggplot(data=time_series_2, aes(x=interval, y=steps))+
geom_line()+
geom_smooth(method = "lm")+
facet_grid(.~weekday)
?labs
time_series_2 <- activity_imputed %>% mutate(weekday=factor(as.POSIXlt(activity$date)$wday %in% c(0:5),labels = c("weekdays","weekend"))) %>% group_by(interval,weekday) %>% summarise(steps=mean(steps))
ggplot(data=time_series_2, aes(x=interval, y=steps))+
geom_line()+
geom_smooth(method = "lm")+
facet_grid(.~weekday)+
labs(title = "Comparison of number of steps between weekdays and weekends",
x= "Interval", y="Steps")
time_series_2 <- activity_imputed %>%
mutate(weekday=factor(as.POSIXlt(activity$date)$wday %in% c(0:5),
labels = c("weekdays","weekend"))) %>%
group_by(interval,weekday) %>% summarise(steps=mean(steps))
ggplot(data=time_series_2, aes(x=interval, y=steps))+
geom_line()+
geom_smooth(method = "lm")+
facet_grid(.~weekday)+
labs(title = "Comparison of number of steps between weekdays and weekends",
x= "Interval", y="Steps")
maxsteps <- time_series[time_series$steps==max(time_series$steps),]$interval
time_series=activity %>% group_by(interval) %>% summarise(steps=mean(steps, na.rm = TRUE))
plot(x=time_series$interval, y=time_series$steps, type = "l",
main= "Time series of steps",
xlab = "Interval",
ylab = "Steps")
maxsteps <- time_series[time_series$steps==max(time_series$steps),]$interval
rm(list = ls())
